<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/Grupo Gerson de Melo/Documents/Laboratorio/javascript/Desktop/Shell Refeitorio/src/database/database.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="browser pragmas query" current="2"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="3211"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,10:mainsessao_log"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="categoria" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="89"/><column index="2" value="48"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="cliente" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="70"/><column index="2" value="111"/><column index="3" value="145"/><column index="4" value="131"/><column index="5" value="139"/><column index="6" value="286"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="compra" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="75"/><column index="2" value="45"/><column index="3" value="104"/><column index="4" value="68"/><column index="5" value="165"/><column index="6" value="79"/><column index="7" value="106"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="empresa" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="83"/><column index="2" value="70"/><column index="3" value="372"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="fornecedor" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort><column index="7" mode="0"/></sort><column_widths><column index="1" value="99"/><column index="2" value="43"/><column index="3" value="62"/><column index="4" value="50"/><column index="5" value="120"/><column index="6" value="173"/><column index="7" value="149"/><column index="8" value="199"/><column index="9" value="75"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="funcionario" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="99"/><column index="2" value="117"/><column index="3" value="64"/><column index="4" value="165"/><column index="5" value="77"/><column index="6" value="94"/><column index="7" value="127"/><column index="11" value="192"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="notaCompra" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort><column index="3" mode="0"/></sort><column_widths><column index="1" value="106"/><column index="2" value="83"/><column index="3" value="126"/><column index="4" value="286"/><column index="5" value="165"/><column index="6" value="99"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="notaVenda" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="67"/><column index="2" value="41"/><column index="3" value="125"/><column index="4" value="86"/><column index="5" value="164"/><column index="6" value="190"/><column index="7" value="99"/><column index="8" value="70"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="produto" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="79"/><column index="2" value="153"/><column index="3" value="59"/><column index="4" value="45"/><column index="5" value="40"/><column index="6" value="40"/><column index="7" value="68"/><column index="8" value="41"/><column index="9" value="137"/><column index="10" value="141"/><column index="11" value="71"/><column index="12" value="70"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="sessao_log" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort><column index="2" mode="1"/></sort><column_widths><column index="1" value="72"/><column index="2" value="214"/><column index="3" value="99"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="sqlite_sequence" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="130"/><column index="2" value="208"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="usuario" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="75"/><column index="2" value="233"/><column index="3" value="80"/><column index="4" value="74"/><column index="5" value="250"/><column index="6" value="99"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="venda" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort><column index="5" mode="1"/></sort><column_widths><column index="1" value="96"/><column index="2" value="86"/><column index="3" value="201"/><column index="4" value="184"/><column index="5" value="219"/><column index="6" value="67"/><column index="7" value="117"/></column_widths><filter_values><column index="7" value="1"/></filter_values><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="drop">DROP TABLE IF EXISTS empresa ;
DROP TABLE IF EXISTS notaVenda;
DROP TABLE IF EXISTS cliente;
DROP TABLE IF EXISTS venda;
DROP TABLE IF EXISTS produto;
DROP TABLE IF EXISTS usuario;
DROP TABLE IF EXISTS compra;
DROP TABLE IF EXISTS notaCompra;
DROP TABLE IF EXISTS fornecedor;
DROP TABLE IF EXISTS categoria;
DROP TABLE IF EXISTS sessao_log;
DROP TABLE IF EXISTS funcionario;

</sql><sql name="create">
CREATE TABLE empresa  (
id_empresa INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
nome TEXT NOT NULL,
nif TEXT,
email TEXT,
contato TEXT DEFAULT +244,
provincia INTEGER DEFAULT luanda,
municipio TEXT,
endereco INTEGER);
CREATE TABLE funcionario (
id_funcionario INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
nome TEXT NOT NULL UNIQUE,
sexo TEXT NOT NULL DEFAULT masculino,
nascimento DATE NOT NULL,
estadoCivil TEXT,
natural TEXT,
provincia_origem TEXT,
municipio_origem TEXT,
municipio TEXT,
residencia TEXT,
endereco TEXT,
telefone TEXT,
datacad DATETIME NOT NULL,
id_empresa INTEGER NOT NULL,
FOREIGN KEY(id_empresa) REFERENCES empresa (id_empresa) ON DELETE CASCADE ON UPDATE CASCADE);
CREATE TABLE notaVenda (
id_venda INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
valor DECIMAL(10,2) NOT NULL,
pagamento  TEXT NOT NULL DEFAULT numer√°rio,
pago BOOLEAN NOT NULL,
data DATE NOT NULL,
datacad DATETIME NOT NULL,
id_funcionario INTEGER NOT NULL,
id_cliente INTEGER NOT NULL,
FOREIGN KEY(id_funcionario) REFERENCES funcionario(id_funcionario) ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY(id_cliente) REFERENCES cliente(id_cliente) ON DELETE CASCADE ON UPDATE CASCADE);
CREATE TABLE cliente (
id_cliente INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
nome TEXT NOT NULL,
telefone TEXT,
NIF TEXT,
juros BOOLEAN,
datacad DATETIME NOT NULL);
CREATE TABLE venda (
id_itemVenda INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
preco REAL(10,2) NOT NULL,
qtd INTEGER NOT NULL,
desconto REAL(10,2) DEFAULT 0,
datacad DATETIME NOT NULL,
id_venda INTEGER NOT NULL,
id_produto INTEGER NOT NULL,
FOREIGN KEY(id_venda) REFERENCES notaVenda(id_venda) ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY(id_produto) REFERENCES produto(id_produto) ON DELETE CASCADE ON UPDATE CASCADE);
CREATE TABLE produto (
id_produto INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
nome TEXT NOT NULL,
unidade INTEGER NOT NULL,
preco DECIMAL(10,2) NOT NULL,
iva REAL NOT NULL DEFAULT 0.7,
taxa REAL DEFAULT 0,
desconto REAL(10,2) DEFAULT 0,
ativo BOOLEAN NOT NULL,
obs TEXT,
datacad DATETIME NOT NULL,
expiracao DATE,
categoria INT NOT NULL,
FOREIGN KEY(categoria) REFERENCES categoria(id_categoria) ON DELETE CASCADE ON UPDATE CASCADE);
CREATE TABLE usuario (
id_usuario INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
senha TEXT NOT NULL,
role TEXT NOT NULL,
permissao BOOLEAN NOT NULL,
last_session DATETIME,
id_funcionario INTEGER NOT NULL,
FOREIGN KEY(id_funcionario) REFERENCES funcionario(id_funcionario) ON DELETE CASCADE ON UPDATE CASCADE);
CREATE TABLE compra (
id_compra INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
preco DECIMAL(10,2) DEFAULT 0,
qtd INTEGER DEFAULT 0,
desconto REAL(10,2) DEFAULT 0,
datacad DATETIME NOT NULL,
id_produto INTEGER NOT NULL,
id_notaCompra INTEGER NOT NULL,
FOREIGN KEY(id_produto) REFERENCES produto(id_produto) ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY(id_notaCompra) REFERENCES notaCompra(id_notaCompra) ON DELETE CASCADE ON UPDATE CASCADE);
CREATE TABLE notaCompra (
id_notaCompra INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
pago BOOLEAN NOT NULL,
vencimento DATE NOT NULL,
datacad DATETIME NOT NULL,
id_funcionario INTEGER NOT NULL,
id_fornecedor INTEGER NOT NULL,
FOREIGN KEY(id_funcionario) REFERENCES funcionario(id_funcionario) ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY(id_fornecedor) REFERENCES fornecedor(id_fornecedor) ON DELETE CASCADE ON UPDATE CASCADE);
CREATE TABLE fornecedor (
id_fornecedor INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
nome INTEGER,
telefone TEXT,
cidade TEXT,
endereco INTEGER,
descricao TEXT,
ativo BOOLEAN,
datacad DATETIME NOT NULL);
CREATE TABLE categoria (
id_categoria INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
nome TEXT NOT NULL UNIQUE);
CREATE TABLE sessao_log (
id_sessao INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
data DATETIME NOT NULL,
id_usuario INTEGER NOT NULL,
FOREIGN KEY(id_usuario) REFERENCES usuario(id_usuario) ON DELETE CASCADE ON UPDATE CASCADE);</sql><sql name="event trigger functions">CREATE TRIGGER sessao_visto 
AFTER UPDATE OF last_session ON usuario
 BEGIN
	insert into sessao_log values (NULL, datetime('now'), new.id_usuario);
 END;</sql><sql name="SQL 5">      select 
            -- sum((v.preco * v.qtd) - v.desconto) as total,
	        SUM(((v.preco * v.qtd) - v.desconto) * p.iva) as total,
			 CASE WHEN SUM(((v.preco * v.qtd) - v.desconto) * p.iva) IS NULL
			THEN 0
			ELSE SUM(((v.preco * v.qtd) - v.desconto) * p.iva)
			END AS vendido,
            strftime('%Y/%m/%d %W', nv.data) as vencimento
            from cliente c
            INNER JOIN notaVenda nv ON nv.id_cliente = c.id_cliente
			LEFT JOIN funcionario f ON f.id_funcionario = nv.id_funcionario
			LEFT JOIN empresa e ON e.id_empresa = f.id_empresa
            LEFT JOIN venda v on v.id_venda = nv.id_venda
            LEFT JOIN produto p on p.id_produto = v.id_produto
			WHERE e.id_empresa = 1 
			AND nv.pago = true 
			AND strftime('%Y/%m %W', nv.data) = strftime('%Y/%m %W', 'now')
            
			GROUP BY strftime('%Y/%m/%d %W', nv.data)
			ORDER BY  strftime('%Y/%m/%d %W', nv.data) DESC;</sql><sql name="SQL 6"> SELECT 
 p.id_produto,
 p.nome as nome,
  SUM(((v.preco * v.qtd) - v.desconto) * p.iva) as total,
  SUM(v.qtd) as qtd,
  COUNT(nv.id_venda) totalOmitido,
  max(nv.data) as ultimavenda
  FROM notaVenda nv
  INNER JOIN venda v on v.id_venda = nv.id_venda
  INNER JOIN produto p on p.id_produto = v.id_produto

 INNER JOIN funcionario f ON f.id_funcionario = nv.id_funcionario 
 WHERE f.id_empresa = 1
 GROUP BY p.id_produto
 ;</sql><sql name="SQL 7"> SELECT
            SUM((c.preco) - c.desconto) as compra,
            SUM(c.qtd) as qtd,
            nc.datacad as registrado 
            from notaCompra nc
            INNER JOIN compra c ON c.id_notaCompra = nc.id_notaCompra
            INNER JOIN produto p ON p.id_produto = c.id_produto
            INNER JOIN funcionario f ON f.id_funcionario = nc.id_funcionario
            WHERE p.id_produto = 1
            GROUP BY p.id_produto;</sql><sql name="SQL 8">select * from sessao_log s
                INNER JOIN usuario u ON u.id_usuario = s.id_usuario
				INNER JOIN funcionario f ON f.id_funcionario = u.id_funcionario
				
                WHERE f.id_funcionario = 1;</sql><current_tab id="6"/></tab_sql></sqlb_project>
